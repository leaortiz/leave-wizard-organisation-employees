{"version":3,"sources":["config/prd.js","components/OrganisationEmployees/constants.js","components/OrganisationEmployees/WorkGroups/index.jsx","components/OrganisationEmployees/WorkGroups/WorkGroups.jsx","components/OrganisationEmployees/LocationTab/index.jsx","components/OrganisationEmployees/LocationTab/LocationTab.jsx","components/OrganisationEmployees/OrganisationTree/index.jsx","components/OrganisationEmployees/OrganisationTree/OrganisationTree.jsx","components/OrganisationEmployees/OrganisationTable/EmployeesTableHeader/index.jsx","components/OrganisationEmployees/OrganisationTable/EmployeesTableHeader/EmployeesTableHeader.jsx","components/OrganisationEmployees/OrganisationTable/EmployeesTableRow/index.jsx","components/OrganisationEmployees/OrganisationTable/EmployeesTableRow/EmployeesTableRow.jsx","components/OrganisationEmployees/OrganisationTable/EmployeesTableBody/index.jsx","components/OrganisationEmployees/OrganisationTable/EmployeesTableBody/EmployeesTableBody.jsx","components/OrganisationEmployees/OrganisationTable/index.jsx","components/OrganisationEmployees/OrganisationTable/OrganisationTable.jsx","components/OrganisationEmployees/CompanyTitle/index.jsx","components/OrganisationEmployees/CompanyTitle/CompanyTitle.jsx","components/OrganisationEmployees/OrganisationSettings/OrganisationSettings.jsx","components/OrganisationEmployees/OrganisationSettings/index.jsx","components/OrganisationEmployees/CompanyDetail/index.jsx","components/OrganisationEmployees/CompanyDetail/CompanyDetail.jsx","components/OrganisationEmployees/index.jsx","App.js","reportWebVitals.js","index.js","config/index.js"],"names":["exports","settings","REACT_APP_API_URL","sort","filter","columns","datafield","caption","Workgroups","props","showAllHandler","value","handleFilterChange","isSelectedStyle","workgroupName","selectedWorkgroupName","backgroundColor","color","workgroups","ret","w","locationId","location","id","isActive","map","Panel","Body","collapsible","className","onClick","filterByWorkgroupHandler","name","style","margin","push","length","state","sortBy","this","React","Component","LocationTab","PanelGroup","accordion","marginBottom","eventKey","Heading","Title","display","toggle","OrganisationTree","setState","tabs","locations","companyId","l","index","resetFilters","resetFilterValues","cursor","Label","textAlign","EmployeesTableHeader","renderTh","column","float","handleSortByChange","sortHelper","c","EmployeesTableRow","renderTd","e","firstName","lastName","href","moment","leaveYearStartDate","format","employees","colSpan","EmployeesTableBody","getMutatedEmployeeList","filterBy","filterValue","showInactiveEmployees","mutatedList","a","b","includes","EmployeesTable","handleChange","Table","striped","bordered","condensed","hover","responsive","Checkbox","checked","onChange","CompanyTitle","settingsPanel","email","workPattern","maxStaffOnLeave","overtimeEnabled","OrganisationSettings","renderDetailField","key","toString","keys","Object","padding","hide","k","i","CompanyDetail","Row","border","background","OrganisationEmployees","componentDidMount","getData","onSuccess","data","fetch","appConfig","headers","then","response","json","Grid","Col","lg","sm","md","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","require"],"mappings":"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","file":"static/js/main.488c7ea1.chunk.js","sourcesContent":["var settings = \r\n{\r\n    REACT_APP_API_URL: `./data.json`\r\n}\r\n\r\nexports.settings = settings;","export const sort = {\r\n    NAME: \"firstName\",\r\n    ROLE: \"role\",\r\n    WORKGROUP: \"workgroupName\",\r\n    DEFAULT: \"default\"\r\n}\r\n\r\nexport const sortHelper = (value) => {\r\n    switch (value) {\r\n        case \"name\":\r\n            return sort.NAME;\r\n        case \"role\":\r\n            return sort.ROLE;\r\n        case \"workgroupName\":\r\n            return sort.WORKGROUP;\r\n        default:\r\n            return sort.DEFAULT\r\n    }\r\n}\r\n\r\nexport const filter = {\r\n    LOCATION: \"location\",\r\n    WORKGROUP: \"workgroup\",\r\n    DEFAULT: \"default\"\r\n}\r\n\r\nexport const columns = [\r\n    { datafield: \"name\", caption: \"Name\" },\r\n    { datafield: \"role\", caption: \"Role\" },\r\n    { datafield: \"workgroupName\", caption: \"Workgroup\" },\r\n    { datafield: \"leaveYearStartDate\", caption: \"Leave Year (dd/MM)\" },\r\n    { datafield: \"\", caption: \"Info\" },\r\n    { datafield: \"employmentStartDate\", caption: \"Employment Dates\" },\r\n    { datafield: \"bradfactor\", caption: \"Bradford Factor\" },\r\n    { datafield: \"viewLeaveTaken\", caption: \"\" },\r\n]","import { Workgroups } from './WorkGroups'\r\n\r\nexport default Workgroups;","import React from 'react';\r\nimport { Panel } from 'react-bootstrap';\r\nimport '../OrganisationEmployees.css';\r\nimport { filter } from '../constants'\r\n\r\n\r\nexport class Workgroups extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sortBy: \"\",\r\n        };\r\n    }\r\n\r\n    showAllHandler = (value) => this.props.handleFilterChange(filter.LOCATION, value);\r\n\r\n    isSelectedStyle = (workgroupName) => workgroupName === this.props.selectedWorkgroupName ? { backgroundColor: \"#00ABD4\", color: \"white\" } : {};\r\n\r\n    workgroups = () => {\r\n        let ret = this.props.workgroups\r\n            .filter(w => w.locationId === this.props.location.id && w.isActive)\r\n            .map((w) =>\r\n                <div key={w.name}>\r\n                    <Panel.Body\r\n                        collapsible\r\n                        className=\"noselect tree-workgroups\"\r\n                        onClick={() => this.props.filterByWorkgroupHandler(w.name, filter.WORKGROUP)}\r\n                        style={this.isSelectedStyle(w.name)}\r\n                    >\r\n                        {w.name}\r\n                    </Panel.Body>\r\n                    <hr style={{ margin: 0 }}></hr>\r\n                </div>\r\n            );\r\n        ret.push(\r\n            <div key={ret.length}>\r\n                <Panel.Body\r\n                    onClick={() => {\r\n                        this.showAllHandler(this.props.location.name);\r\n                        this.props.filterByWorkgroupHandler(this.props.location.name, filter.LOCATION)\r\n                    }}\r\n                    collapsible\r\n                    className=\"noselect tree-workgroups\"\r\n                    style={this.isSelectedStyle(this.props.location.name)}\r\n                >\r\n                    {`All workgroups for this location`}\r\n                </Panel.Body>\r\n                <hr style={{ margin: 0 }}></hr>\r\n            </div>);\r\n        return ret;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.workgroups()\r\n        )\r\n\r\n    }\r\n}","import { LocationTab } from './LocationTab'\r\n\r\nexport default LocationTab;","import React from 'react';\r\nimport { PanelGroup, Panel } from 'react-bootstrap';\r\nimport '../OrganisationEmployees.css';\r\nimport Workgroups from '../WorkGroups'\r\n\r\nexport class LocationTab extends React.Component {\r\n    render() {\r\n        const { location, workgroups } = this.props\r\n        return (\r\n            <PanelGroup\r\n                accordion\r\n                key={location.name}\r\n                id={location.name}\r\n                style={{ marginBottom: \"0.5rem\" }}\r\n            >\r\n                <Panel eventKey={this.props.eventKey}>\r\n                    <Panel.Heading className=\"noselect tree-location\">\r\n                        <div>\r\n                            <Panel.Title style={{ display: \"inline\" }} toggle>{location.name} </Panel.Title>                            \r\n                        </div>\r\n                    </Panel.Heading>\r\n                    <Workgroups\r\n                        location={location}\r\n                        workgroups={workgroups}\r\n                        {...this.props}\r\n                    />\r\n\r\n                </Panel>\r\n            </PanelGroup>\r\n        );\r\n    }\r\n}","import { OrganisationTree } from './OrganisationTree'\r\n\r\nexport default OrganisationTree;","import React from 'react';\r\nimport {Label } from 'react-bootstrap';\r\nimport '../OrganisationEmployees.css';\r\nimport LocationTab from '../LocationTab'\r\n\r\n\r\nexport class OrganisationTree extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedWorkgroupName: ''\r\n        };\r\n    }\r\n\r\n    filterByWorkgroupHandler = (value, filter) => {\r\n        this.setState({ selectedWorkgroupName: value });\r\n        this.props.handleFilterChange(filter, value);\r\n    }\r\n\r\n    tabs = () => {\r\n        const { locations, companyId } = this.props;\r\n        return locations.filter(l => l.companyId === companyId && l.isActive)\r\n            .map((location, index) => (\r\n                <LocationTab\r\n                    key={'lt' + index}\r\n                    location={location}\r\n                    filterByWorkgroupHandler={this.filterByWorkgroupHandler}\r\n                    selectedWorkgroupName={this.state.selectedWorkgroupName}\r\n                    {...this.props} />\r\n            ));\r\n    }\r\n\r\n    resetFilters = () => \r\n    {\r\n        this.props.resetFilterValues()\r\n        this.setState({selectedWorkgroupName: ''})\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <h3 style={{ marginBottom: \"2rem\", color: \"#00ABD4\", cursor: \"pointer\" }}>\r\n                    <Label\r\n                        onClick={this.resetFilters}\r\n                        className=\"lw-bg-light-blue\">\r\n                        {this.props.name}\r\n                    </Label>\r\n                </h3>\r\n\r\n                {this.tabs()}\r\n                <div>                <p\r\n                        style={{textAlign:\"left\"}}\r\n                        className=\"lw-light-blue company-detail-btn-text\"\r\n                        onClick={this.resetFilters}\r\n                    >\r\n                        reset\r\n                    </p></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { EmployeesTableHeader } from './EmployeesTableHeader'\r\n\r\nexport default EmployeesTableHeader;","import React from 'react';\r\nimport { columns, sortHelper } from '../../constants'\r\nimport { FcAlphabeticalSortingAz } from \"react-icons/fc\";\r\n\r\n\r\n\r\nexport class EmployeesTableHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    renderTh = (column) => {\r\n        // should be refactored if more columns need a different formatter, this will do for now.\r\n\r\n        if (column.datafield === \"name\" || column.datafield === \"role\" || column.datafield === \"workgroupName\")\r\n            return <th key={column.datafield}>{column.caption}\r\n                <FcAlphabeticalSortingAz\r\n                    style={{ float: \"right\", cursor: \"pointer\" }}\r\n                    onClick={() => this.props.handleSortByChange(sortHelper(column.datafield))}\r\n                />\r\n            </th>\r\n        else\r\n            return <th key={column.datafield}>{column.caption}</th>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <thead>\r\n                <tr>\r\n                    {columns.map(c => this.renderTh(c))}\r\n                </tr>\r\n            </thead>\r\n        );\r\n    }\r\n}","import { EmployeesTableRow } from './EmployeesTableRow'\r\n\r\nexport default EmployeesTableRow;","import React from 'react';\r\nimport moment from 'moment';\r\nimport { columns } from '../../constants'\r\n\r\nexport class EmployeesTableRow extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    renderTd = (e, datafield) => {\r\n        // should be refactored if more columns need a different formatter, this will do for now.\r\n        if (datafield === \"name\")\r\n            return <p className=\"lw-light-blue\">{e.firstName} {e.lastName}</p>\r\n        else if (datafield === \"viewLeaveTaken\")\r\n            return <a href=\"#\" className=\"lw-light-blue\">View Leave Taken</a>\r\n        else if (datafield === \"leaveYearStartDate\")\r\n            return moment(e.leaveYearStartDate).format('DD/MMM');\r\n        else\r\n            return e[datafield];\r\n    }\r\n\r\n    render() {\r\n        const { employees } = this.props;\r\n        return (\r\n            <tbody>\r\n                {\r\n                    employees.length === 0 ?\r\n                        <tr><td colSpan={columns.length} style={{ textAlign: \"center\" }}>There are no employees to show.</td></tr> :\r\n\r\n                        employees.map((e, index) =>\r\n                            <tr key={`tr-${index}`}>\r\n                                {\r\n                                    columns.map((c, index) =>\r\n                                        <td key={c.datafield + index}>\r\n                                            {this.renderTd(e, c.datafield)}\r\n                                        </td>\r\n                                    )\r\n                                }\r\n                            </tr>\r\n                        )\r\n                }\r\n            </tbody>\r\n        );\r\n    }\r\n}","import { EmployeesTableBody } from './EmployeesTableBody'\r\n\r\nexport default EmployeesTableBody;","import React from 'react';\r\nimport { sort, filter } from '../../constants'\r\nimport EmployeesTableRow from '../EmployeesTableRow'\r\n\r\n\r\nexport class EmployeesTableBody extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    getMutatedEmployeeList = () => {\r\n        //next step refactor to redux\r\n        const { employees, sortBy, filterBy, filterValue, showInactiveEmployees } = this.props;\r\n\r\n        let mutatedList = employees;\r\n       \r\n        sortBy !== sort.DEFAULT ?\r\n            mutatedList.sort((a, b) => (a[sortBy] > b[sortBy]) ? 1 : ((b[sortBy] > a[sortBy]) ? -1 : 0)) :\r\n            mutatedList.sort((a, b) => (a.id > b.id) ? 1 : ((b.id > a.id) ? -1 : 0))\r\n        if (filterBy === filter.LOCATION)\r\n            mutatedList = mutatedList.filter(e => e.workgroupName.includes(filterValue));\r\n        if (filterBy === filter.WORKGROUP)\r\n            mutatedList = mutatedList.filter(e => e.workgroupName === filterValue);\r\n\r\n        return showInactiveEmployees ? mutatedList.filter(e => e.isActive) : mutatedList;\r\n    }\r\n\r\n\r\n    render() {\r\n        const employees = this.getMutatedEmployeeList();\r\n        return (\r\n            <EmployeesTableRow employees={employees}/>\r\n        );\r\n    }\r\n}","import { EmployeesTable } from './OrganisationTable'\r\n\r\nexport default EmployeesTable;","import React from 'react';\r\nimport { Checkbox, Table } from 'react-bootstrap';\r\nimport EmployeesTableHeader from './EmployeesTableHeader'\r\nimport EmployeesTableBody from './EmployeesTableBody'\r\n\r\nexport class EmployeesTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showInactiveEmployees: true\r\n        };\r\n    }\r\n\r\n    handleChange = (name, value) => this.setState({ [name]: value });\r\n\r\n    render() {\r\n        let showInactiveEmployees = this.state.showInactiveEmployees;\r\n        return (\r\n            <>\r\n                <Table striped bordered condensed hover responsive>\r\n                    <EmployeesTableHeader {...this.props} />\r\n                    <EmployeesTableBody {...this.props} showInactiveEmployees={showInactiveEmployees} />\r\n                </Table>\r\n                <div style={{ float: \"right\" }}>\r\n                    <Checkbox\r\n                        checked={!showInactiveEmployees}\r\n                        onChange={() => this.handleChange(\"showInactiveEmployees\", !showInactiveEmployees)}\r\n                        style={{ display: \"inline\" }}\r\n                    /> show inactive employees\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import { CompanyTitle } from './CompanyTitle'\r\n\r\nexport default CompanyTitle;","import React from 'react';\r\nimport { BsPencil } from \"react-icons/bs\";\r\n\r\n\r\nexport class CompanyTitle extends React.Component {\r\n    render() {\r\n        return (\r\n            <div style={{ display: \"inline\" }}>\r\n                <h3 className=\"lw-light-blue\" style={{ float: \"left\", display: \"inline\" }}>\r\n                    <BsPencil />\r\n                    {' '}{this.props.name}\r\n                </h3>\r\n                <p className=\"company-detail-end\">\r\n                    company\r\n                    </p>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Panel } from 'react-bootstrap';\r\nimport moment from 'moment';\r\n\r\n\r\nconst settingsPanel = {\r\n    email: \"Email: \",\r\n    leaveYearStartDate: 'Leave year starts on (dd/MM): ',\r\n    workPattern: 'Work pattern: ',\r\n    maxStaffOnLeave: 'Max staff leave for the whole company: ',\r\n    overtimeEnabled: 'Overtime enabled: '\r\n}\r\n\r\nexport class OrganisationSettings extends React.Component {\r\n\r\n    renderDetailField = (key) => {\r\n        if (key === 'leaveYearStartDate') {\r\n            return <><strong>{settingsPanel[key]}</strong> {moment(this.props.leaveYearStartDate).format('DD/MMM')}  </>\r\n        }\r\n        else\r\n            return <>\r\n                <strong>{settingsPanel[key]}</strong>\r\n                {key === 'workPattern' ?\r\n                    this.props[key]?.name :\r\n                    this.props[key]?.toString()}\r\n            </>\r\n\r\n    }\r\n\r\n    render() {\r\n        const keys = Object.keys(settingsPanel);\r\n        return (\r\n            <Panel>\r\n                <Panel.Body style={{ padding: \"8px\" }}>\r\n\r\n                    {this.props.hide ?\r\n                        null\r\n                        : keys.map((k, i) =>\r\n                            <p key={i}>\r\n                                {this.renderDetailField(k)}\r\n                            </p>\r\n                        )}\r\n                    <p\r\n                        style={{float:\"right\"}}\r\n                        className=\"lw-light-blue company-detail-btn-text\"\r\n                        onClick={() => this.props.handleChange(\"hide\", !this.props.hide)}\r\n                    >\r\n                        {this.props.hide ? \"show more\" : \"show less\"}\r\n                    </p>\r\n                </Panel.Body>\r\n            </Panel>\r\n        )\r\n    }\r\n}","import { OrganisationSettings } from './OrganisationSettings'\r\n\r\nexport default OrganisationSettings;","import { CompanyDetail } from './CompanyDetail'\r\n\r\nexport default CompanyDetail;","import React from 'react';\r\nimport { Row } from 'react-bootstrap';\r\nimport CompanyTitle from '../CompanyTitle'\r\nimport OrganisationSettings from '../OrganisationSettings'\r\n\r\n\r\nexport class CompanyDetail extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hide: false,\r\n        };\r\n    }\r\n\r\n    handleChange = (name, value) => this.setState({ [name]: value });\r\n\r\n    render() {\r\n        const props = this.props\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <CompanyTitle {...props} />\r\n                </Row>\r\n                <hr style={{ margin: 0, marginBottom: \"1rem\", border: \"1px solid #00ABD4\", background: \"#00ABD4\" }}></hr>\r\n                <Row>\r\n                    <OrganisationSettings {...props} hide={this.state.hide} handleChange={this.handleChange} />\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Col, Grid, Row } from 'react-bootstrap';\r\nimport OrganisationTree from './OrganisationTree/';\r\nimport EmployeesTable from './OrganisationTable';\r\nimport CompanyDetail from './CompanyDetail/';\r\nimport appConfig from '../../config';\r\nimport { sort, filter } from './constants'\r\n\r\nclass OrganisationEmployees extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: { companyId: 0, name: \"\", locations: [], workgroups: [], employees: [] },\r\n            filterBy: filter.DEFAULT,\r\n            filterValue: \"\",\r\n            sortBy: sort.DEFAULT,\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getData();\r\n    }\r\n\r\n    getData = async () => {\r\n        const onSuccess = (data) => this.setState({ data: data });\r\n        fetch(appConfig.settings.REACT_APP_API_URL, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n\r\n        })\r\n            .then((response) => response.json())\r\n            .then((data) => onSuccess(data));\r\n    }\r\n\r\n    handleChange = (name, value) => this.setState({ [name]: value });\r\n\r\n    handleFilterChange = (filterBy, filterValue) =>\r\n        this.setState({\r\n            filterBy: filterBy,\r\n            filterValue: filterValue\r\n        });\r\n\r\n    handleSortByChange = (sortBy) => this.setState({ sortBy: sortBy, });\r\n\r\n    resetFilterValues = () => this.setState({\r\n        filterBy: filter.DEFAULT,\r\n        filterValue: \"\",\r\n        sortBy: sort.DEFAULT,\r\n    })\r\n\r\n    render() {\r\n        const { data, filterBy, filterValue, sortBy } = this.state;\r\n        return (\r\n            <Grid>\r\n                <Row>\r\n                    <Col lg={3} sm={4} md={3}>\r\n                        <OrganisationTree\r\n                            name={data.name}\r\n                            companyId={data.id}\r\n                            locations={data.locations}\r\n                            workgroups={data.workgroups}\r\n                            handleChange={this.handleChange}\r\n                            handleFilterChange={this.handleFilterChange}\r\n                            resetFilterValues={this.resetFilterValues}\r\n                        />\r\n                    </Col>\r\n                    <Col lg={9} sm={12} md={13}>\r\n                        <CompanyDetail {...this.state.data} />\r\n                        <Row>\r\n                            <EmployeesTable\r\n                                filterBy={filterBy}\r\n                                filterValue={filterValue}\r\n                                sortBy={sortBy}\r\n                                {...this.state.data}\r\n                                handleSortByChange={this.handleSortByChange}\r\n                            />\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OrganisationEmployees;","import './App.css';\nimport OrganisationEmployees from './components/OrganisationEmployees';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">     \n      <OrganisationEmployees />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = require('./' + (process.env.REACT_APP_ENV || 'local'));"],"sourceRoot":""}