{"version":3,"sources":["config/prd.js","components/OrganisationEmployees/constants.js","components/OrganisationEmployees/OrganisationTree/WorkGroups/index.jsx","components/OrganisationEmployees/OrganisationTree/WorkGroups/WorkGroups.jsx","components/OrganisationEmployees/OrganisationTree/LocationTab/index.jsx","components/OrganisationEmployees/OrganisationTree/LocationTab/LocationTab.jsx","components/OrganisationEmployees/OrganisationTree/index.jsx","components/OrganisationEmployees/OrganisationTree/OrganisationTree.jsx","components/OrganisationEmployees/OrganisationTable/EmployeesTableHeader/index.jsx","components/OrganisationEmployees/OrganisationTable/EmployeesTableHeader/EmployeesTableHeader.jsx","components/OrganisationEmployees/OrganisationTable/EmployeesTableRow/index.jsx","components/OrganisationEmployees/OrganisationTable/EmployeesTableRow/EmployeesTableRow.jsx","components/OrganisationEmployees/OrganisationTable/EmployeesTableBody/index.jsx","components/OrganisationEmployees/OrganisationTable/EmployeesTableBody/EmployeesTableBody.jsx","components/OrganisationEmployees/OrganisationTable/index.jsx","components/OrganisationEmployees/OrganisationTable/OrganisationTable.jsx","components/OrganisationEmployees/Organisation/OrganisationTitle/index.jsx","components/OrganisationEmployees/Organisation/OrganisationTitle/OrganisationTitle.jsx","components/OrganisationEmployees/Organisation/OrganisationDetail/OrganisationDetail.jsx","components/OrganisationEmployees/Organisation/OrganisationDetail/index.jsx","components/OrganisationEmployees/Organisation/index.jsx","components/OrganisationEmployees/Organisation/Organisation.jsx","components/OrganisationEmployees/index.jsx","components/OrganisationEmployees/OrganisationEmployees/OrganisationEmployees.jsx","App.js","reportWebVitals.js","index.js","config/index.js"],"names":["exports","settings","REACT_APP_API_URL","sortBy","filter","columns","datafield","caption","Workgroups","props","isSelectedStyle","workgroupId","selectedTreeId","backgroundColor","color","workgroups","w","locationId","location","id","isActive","map","Panel","Body","collapsible","className","onClick","filterByWorkgroupHandler","style","name","margin","state","this","React","Component","LocationTab","showAllHandler","value","handleFilterChange","PanelGroup","accordion","marginBottom","cursor","eventKey","Heading","Title","OrganisationTree","setState","selectedLocation","tabs","locations","companyId","l","index","resetFilters","resetfilterValueIds","Label","EmployeesTableHeader","renderTh","column","float","handleSortByChange","sortHelper","c","EmployeesTableRow","renderTd","e","lastName","firstName","href","moment","leaveYearStartDate","format","employees","length","colSpan","textAlign","EmployeesTableBody","getMutatedEmployeeList","filterBy","filterValueId","showInactiveEmployees","clonedList","slice","DEFAULT","sort","a","b","filteredWorkGroupsBySelectedLocation","some","OrganisationTable","handleChange","Table","striped","bordered","condensed","hover","responsive","Checkbox","checked","onChange","display","OrganisationTitle","companyLevelDetail","email","workPattern","maxStaffOnLeave","overtimeEnabled","locationDetail","city","workgroupDetail","leaderName","OrganisationDetail","getData","array","data","detail","leader","isLocation","isWorkgroup","padding","hide","Object","keys","k","i","marginLeft","Organisation","Row","border","background","OrganisationEmployees","componentDidMount","onSuccess","fetch","appConfig","headers","then","response","json","Grid","Col","lg","sm","md","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","require"],"mappings":"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","file":"static/js/main.c85f24c5.chunk.js","sourcesContent":["var settings = \r\n{\r\n    REACT_APP_API_URL: `./data.json`\r\n}\r\n\r\nexports.settings = settings;","export const sortBy = {\r\n    NAME: \"lastName\",\r\n    ROLE: \"role\",\r\n    WORKGROUP: \"workgroupName\",\r\n    DEFAULT: \"default\"\r\n}\r\n\r\nexport const sort = {  \r\n    ASC: \"asc\",\r\n    DESC: \"desc\"\r\n}\r\n\r\nexport const sortHelper = (value) => {\r\n    switch (value) {\r\n        case \"name\":\r\n            return sortBy.NAME;\r\n        case \"role\":\r\n            return sortBy.ROLE;\r\n        case \"workgroupName\":\r\n            return sortBy.WORKGROUP;\r\n        default:\r\n            return sortBy.DEFAULT\r\n    }\r\n}\r\n\r\nexport const filter = {\r\n    LOCATION: \"location\",\r\n    WORKGROUP: \"workgroup\",\r\n    DEFAULT: \"default\"\r\n}\r\n\r\nexport const columns = [\r\n    { datafield: \"name\", caption: \"Name\" },\r\n    { datafield: \"role\", caption: \"Role\" },\r\n    { datafield: \"workgroupName\", caption: \"Workgroup\" },\r\n    { datafield: \"leaveYearStartDate\", caption: \"Leave Year (dd/MM)\" },\r\n    { datafield: \"\", caption: \"Info\" },\r\n    { datafield: \"employmentStartDate\", caption: \"Employment Dates\" },\r\n    { datafield: \"bradfactor\", caption: \"Bradford Factor\" },\r\n    { datafield: \"viewLeaveTaken\", caption: \"\" },\r\n]","import { Workgroups } from './WorkGroups'\r\n\r\nexport default Workgroups;","import React from 'react';\r\nimport { Panel } from 'react-bootstrap';\r\nimport '../../OrganisationEmployees.css';\r\nimport { filter } from '../../constants'\r\n\r\nexport class Workgroups extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sortBy: \"\",\r\n        };\r\n    }   \r\n\r\n    isSelectedStyle = (workgroupId) => workgroupId === this.props.selectedTreeId ? { backgroundColor: \"#00ABD4\", color: \"white\", } : {};\r\n\r\n    workgroups = () => {\r\n        let ret = this.props.workgroups\r\n            .filter(w => w.locationId === this.props.location.id && w.isActive)\r\n            .map((w) =>\r\n                <div key={w.name}>                   \r\n                    <Panel.Body\r\n                        collapsible\r\n                        className=\"noselect tree-workgroups\"\r\n                        onClick={() => this.props.filterByWorkgroupHandler(w.id, filter.WORKGROUP, this.props.location)}\r\n                        style={this.isSelectedStyle(w.id)}\r\n                    >\r\n                        {w.name} \r\n                    </Panel.Body>\r\n                    <hr style={{ margin: 0 }}></hr>\r\n                </div>\r\n            );\r\n\r\n        return ret;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.workgroups()\r\n        )\r\n\r\n    }\r\n}","import { LocationTab } from './LocationTab'\r\n\r\nexport default LocationTab;","import React from 'react';\r\nimport { PanelGroup, Panel } from 'react-bootstrap';\r\nimport '../../OrganisationEmployees.css';\r\nimport Workgroups from '../WorkGroups'\r\nimport { filter } from '../../constants'\r\n\r\nexport class LocationTab extends React.Component {\r\n\r\n    isSelectedStyle = (workgroupId) => workgroupId === this.props.selectedTreeId ? { backgroundColor: \"#00ABD4\", color: \"white\", } : {};\r\n\r\n    showAllHandler = (value) => this.props.handleFilterChange(filter.LOCATION, value);\r\n    \r\n    render() {\r\n        const { location, workgroups } = this.props\r\n        return (\r\n            <PanelGroup\r\n                accordion\r\n                key={location.name}\r\n                id={location.name}\r\n                style={{ marginBottom: \"0.5rem\", cursor:'pointer' }}\r\n            >\r\n                <Panel eventKey={this.props.eventKey}>\r\n                    <Panel.Heading className=\"noselect tree-location\">\r\n                   \r\n                            <Panel.Title \r\n                           \r\n                            onClick={() => {\r\n                                this.showAllHandler(this.props.location.name);\r\n                                this.props.filterByWorkgroupHandler(this.props.location.id, filter.LOCATION)\r\n                            }}\r\n                            collapsible\r\n                            className=\"noselect tree-workgroups\"\r\n                            style={this.isSelectedStyle(this.props.location.id)}\r\n                            >\r\n                                {location.name} \r\n                            </Panel.Title>                            \r\n\r\n                    </Panel.Heading>\r\n                    <Workgroups\r\n                        location={location}\r\n                        workgroups={workgroups}\r\n                        {...this.props}\r\n                    />\r\n\r\n                </Panel>\r\n            </PanelGroup>\r\n        );\r\n    }\r\n}\r\n\r\n/**\r\n          \r\n ret.push(\r\n            <div key={ret.length}>\r\n                <Panel.Body\r\n                    onClick={() => {\r\n                        this.showAllHandler(this.props.location.name);\r\n                        this.props.filterByWorkgroupHandler(this.props.location.id, filter.LOCATION)\r\n                    }}\r\n                    collapsible\r\n                    className=\"noselect tree-workgroups\"\r\n                    style={this.isSelectedStyle(this.props.location.id)}\r\n                >\r\n                    {this.props.location.name}\r\n                </Panel.Body>\r\n                <hr style={{ margin: 0 }}></hr>\r\n            </div>);\r\n */","import { OrganisationTree } from './OrganisationTree'\r\n\r\nexport default OrganisationTree;","import React from 'react';\r\nimport { Label, Panel } from 'react-bootstrap';\r\nimport '../OrganisationEmployees.css';\r\nimport LocationTab from './LocationTab'\r\n\r\n\r\nexport class OrganisationTree extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedTreeId: 0,\r\n            selectedLocation: ''\r\n        };\r\n    }\r\n\r\n    filterByWorkgroupHandler = (workgroupId, filter, location) => {\r\n        this.setState({ selectedTreeId: workgroupId, selectedLocation: location });\r\n        this.props.handleFilterChange(filter, workgroupId);\r\n    }\r\n\r\n    tabs = () => {\r\n        const { locations, companyId } = this.props;\r\n        return locations.filter(l => l.companyId === companyId && l.isActive)\r\n            .map((location, index) => (\r\n                <LocationTab\r\n                    key={'lt' + index}\r\n                    location={location}\r\n                    filterByWorkgroupHandler={this.filterByWorkgroupHandler}\r\n                    selectedTreeId={this.state.selectedTreeId}\r\n                    {...this.props} />\r\n            ));\r\n    }\r\n\r\n    isSelectedStyle = () => this.state.selectedTreeId === 0 ? { backgroundColor: \"#00ABD4\", color: \"white\", } : {backgroundColor: \"#f5f5f5\" };\r\n\r\n    resetFilters = () => {\r\n        this.props.resetfilterValueIds()\r\n        this.setState({ selectedTreeId: 0 })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3 style={{ marginBottom: \"2rem\", color: \"#00ABD4\", cursor: \"pointer\" }}>\r\n                    <Label\r\n                        className=\"lw-bg-light-blue\">\r\n                        {this.props.name}\r\n                    </Label>\r\n                </h3>\r\n\r\n                {this.tabs()}\r\n                    <Panel\r\n                        className=\"company-detail-btn-text\"\r\n                        onClick={this.resetFilters}\r\n                        style={this.isSelectedStyle()}\r\n                    >\r\n                        Show all\r\n                    </Panel>\r\n                    <hr style={{margin:1}}></hr>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { EmployeesTableHeader } from './EmployeesTableHeader'\r\n\r\nexport default EmployeesTableHeader;","import React from 'react';\r\nimport { columns, sortHelper } from '../../constants'\r\nimport { FcAlphabeticalSortingAz } from \"react-icons/fc\";\r\n\r\n\r\n\r\nexport class EmployeesTableHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    renderTh = (column) => {\r\n        // should be refactored if more columns need a different formatter, this will do for now.\r\n\r\n        if (column.datafield === \"name\" || column.datafield === \"role\" || column.datafield === \"workgroupName\")\r\n            return <th key={column.datafield}>{column.caption}\r\n                <FcAlphabeticalSortingAz\r\n                    style={{ float: \"right\", cursor: \"pointer\" }}\r\n                    onClick={() => this.props.handleSortByChange(sortHelper(column.datafield))}\r\n                />\r\n            </th>\r\n        else\r\n            return <th key={column.datafield}>{column.caption}</th>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <thead>\r\n                <tr>\r\n                    {columns.map(c => this.renderTh(c))}\r\n                </tr>\r\n            </thead>\r\n        );\r\n    }\r\n}","import { EmployeesTableRow } from './EmployeesTableRow'\r\n\r\nexport default EmployeesTableRow;","import React from 'react';\r\nimport moment from 'moment';\r\nimport { columns } from '../../constants'\r\n\r\nexport class EmployeesTableRow extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    renderTd = (e, datafield) => {\r\n        // should be refactored if more columns need a different formatter, this will do for now.\r\n        if (datafield === \"name\")\r\n            return <p className=\"lw-light-blue\">{e.lastName}, {e.firstName}</p>\r\n        else if (datafield === \"viewLeaveTaken\")\r\n            return <a href=\"#\" className=\"lw-light-blue\">View Leave Taken</a>\r\n        else if (datafield === \"leaveYearStartDate\")\r\n            return moment(e.leaveYearStartDate).format('DD/MMM');\r\n        else\r\n            return e[datafield];\r\n    }\r\n\r\n    render() {\r\n        const { employees } = this.props;\r\n        return (\r\n            <>\r\n                {\r\n                    employees.length === 0 ?\r\n                        <tr><td colSpan={columns.length} style={{ textAlign: \"center\" }}>There are no employees to show.</td></tr> :\r\n\r\n                        employees.map((e, index) =>\r\n                            <tr key={`tr-${index}`}>\r\n                                {\r\n                                    columns.map((c, index) =>\r\n                                        <td key={c.datafield + index}>\r\n                                            {this.renderTd(e, c.datafield)}\r\n                                        </td>\r\n                                    )\r\n                                }\r\n                            </tr>\r\n                        )\r\n                }\r\n            </>\r\n        );\r\n    }\r\n}","import { EmployeesTableBody } from './EmployeesTableBody'\r\n\r\nexport default EmployeesTableBody;","import React from 'react';\r\nimport { filter } from '../../constants'\r\nimport EmployeesTableRow from '../EmployeesTableRow'\r\n\r\n\r\nexport class EmployeesTableBody extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    getMutatedEmployeeList = () => {\r\n        //next step refactor to redux\r\n        const { employees, sortBy, filterBy, filterValueId, showInactiveEmployees, workgroups } = this.props;\r\n\r\n        let clonedList = employees.slice();\r\n        sortBy !== sortBy.DEFAULT ?\r\n            clonedList.sort((a, b) => (a[sortBy] > b[sortBy]) ? 1 : ((b[sortBy] > a[sortBy]) ? -1 : 0)) :\r\n            clonedList.sort((a, b) => (a.id > b.id) ? 1 : ((b.id > a.id) ? -1 : 0))\r\n        if (filterBy === filter.LOCATION)\r\n        {\r\n            const filteredWorkGroupsBySelectedLocation = workgroups.filter(w => w.locationId === filterValueId)\r\n            clonedList = clonedList.filter(e => filteredWorkGroupsBySelectedLocation.some(w => w.id === e.workgroupId));\r\n        }\r\n          \r\n        if (filterBy === filter.WORKGROUP)\r\n            clonedList = clonedList.filter(e => e.workgroupId === filterValueId);\r\n        \r\n        return showInactiveEmployees ? clonedList.filter(e => e.isActive) : clonedList;\r\n    }\r\n\r\n\r\n    render() {\r\n        const employees = this.getMutatedEmployeeList();\r\n        return (\r\n            <tbody>\r\n                <EmployeesTableRow employees={employees}/>\r\n            </tbody>\r\n        );\r\n    }\r\n}","import OrganisationTable from './OrganisationTable'\r\n\r\nexport default OrganisationTable;","import React from 'react';\r\nimport { Checkbox, Table } from 'react-bootstrap';\r\nimport EmployeesTableHeader from './EmployeesTableHeader'\r\nimport EmployeesTableBody from './EmployeesTableBody'\r\n\r\nexport default class OrganisationTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showInactiveEmployees: true\r\n        };\r\n    }\r\n\r\n    handleChange = (name, value) => this.setState({ [name]: value });\r\n\r\n    render() {\r\n        let showInactiveEmployees = this.state.showInactiveEmployees;\r\n        return (\r\n            <>\r\n                <Table striped bordered condensed hover responsive>\r\n                    <EmployeesTableHeader {...this.props} />\r\n                    <EmployeesTableBody {...this.props} showInactiveEmployees={showInactiveEmployees} />\r\n                </Table>\r\n                <div style={{ float: \"right\" }}>\r\n                    <Checkbox\r\n                        checked={!showInactiveEmployees}\r\n                        onChange={() => this.handleChange(\"showInactiveEmployees\", !showInactiveEmployees)}\r\n                        style={{ display: \"inline\" }}\r\n                    /> show inactive employees\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import OrganisationTitle from './OrganisationTitle'\r\n\r\nexport default OrganisationTitle;","import React from 'react';\r\nimport { BsPencil } from \"react-icons/bs\";\r\n\r\n\r\nexport default class OrganisationTitle extends React.Component {\r\n    render() {\r\n        return (\r\n            <div style={{ display: \"inline\" }}>\r\n                <h3 className=\"lw-light-blue\" style={{ float: \"left\", display: \"inline\" }}>\r\n                    <BsPencil />\r\n                    {' '}{this.props.name}\r\n                </h3>\r\n                <p className=\"company-detail-end\">\r\n                    company\r\n                    </p>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Panel } from 'react-bootstrap';\r\nimport moment from 'moment';\r\nimport { FcExpand, FcCollapse } from \"react-icons/fc\";\r\nimport { filter } from '../../constants';\r\n\r\n\r\nconst companyLevelDetail = {\r\n    email: \"Email: \",\r\n    leaveYearStartDate: 'Leave year starts on (dd/MM): ',\r\n    workPattern: 'Work pattern: ',\r\n    maxStaffOnLeave: 'Max staff leave for the whole company: ',\r\n    overtimeEnabled: 'Overtime enabled: '\r\n}\r\n\r\nconst locationDetail = {\r\n    city: 'City: ',\r\n    workPattern: 'Work pattern: ',\r\n    maxStaffOnLeave: \"Max staff on leave: \"\r\n}\r\n\r\nconst workgroupDetail = {\r\n    name: 'Workgroup: ',\r\n    leaderName: \"Leader: \",\r\n    maxStaffOnLeave: 'Max staff leave for the whole company: ',\r\n}\r\n\r\n\r\nexport default class OrganisationDetail extends React.Component {\r\n\r\n    getData = ({ filterBy, filterValueId }, array) => {\r\n        let data = array.slice().filter(l => l.id === filterValueId)[0];\r\n        if (filterBy === filter.LOCATION) {\r\n            return {\r\n                data: {\r\n                    city: data.city,\r\n                    maxStaffOnLeave: data.maxStaffOnLeave ?? 'N/A',\r\n                    workPattern: data.workPattern ?? 'N/A'\r\n                },\r\n                detail: locationDetail,\r\n            };\r\n        }\r\n        else if (filterBy === filter.WORKGROUP) {\r\n            return {\r\n                data: {\r\n                    name: data.name,\r\n                    leaderName: data.leader?.name ?? 'N/A',\r\n                    maxStaffOnLeave: data.maxStaffOnLeave ?? 'N/A'\r\n                },\r\n                detail: workgroupDetail\r\n            }\r\n        }\r\n        else\r\n            return {\r\n                data: {\r\n                    email: this.props.email,\r\n                    leaveYearStartDate: moment(this.props.leaveYearStartDate).format('DD/MMM'),\r\n                    workPattern: this.props.workPattern?.name,\r\n                    maxStaffOnLeave: this.props.maxStaffOnLeave,\r\n                    overtimeEnabled: this.props.overtimeEnabled ? 'yes' : 'no'\r\n                },\r\n                detail: companyLevelDetail\r\n            }\r\n    }\r\n\r\n    render() {\r\n        const isLocation = this.props.filterBy === filter.LOCATION;\r\n        const isWorkgroup = this.props.filterBy === filter.WORKGROUP;\r\n        let array = isLocation ? this.props.data.locations : isWorkgroup ? this.props.data.workgroups : [];\r\n        const data = this.getData(this.props, array);\r\n       \r\n        return (\r\n            <Panel>\r\n                <Panel.Body style={{ padding: 0 }}>\r\n\r\n                    {this.props.hide ? null :\r\n                        <div style={{ padding: '12px' }} >\r\n                            {\r\n                                Object.keys(data.detail).map((k, i) =>\r\n                                    <p key={i}>\r\n                                        {<strong>{data.detail[k]}</strong>} {data.data[k]}\r\n                                    </p>\r\n                                )}\r\n                        </div>\r\n                    }\r\n                </Panel.Body>\r\n                <div className='lw-show-details' onClick={() => this.props.handleChange(\"hide\", !this.props.hide)} >\r\n                    <h3 style={{ display: 'block', margin: 0, marginLeft: '49%' }} >\r\n                        {this.props.hide ? <FcExpand /> : <FcCollapse />}\r\n                    </h3>\r\n                </div>\r\n            </Panel>\r\n        )\r\n    }\r\n}","import OrganisationDetail from './OrganisationDetail'\r\n\r\nexport default OrganisationDetail;","import Organisation from './Organisation'\r\n\r\nexport default Organisation;","import React from 'react';\r\nimport { Row } from 'react-bootstrap';\r\nimport OrganisationTitle from './OrganisationTitle'\r\nimport OrganisationDetail from './OrganisationDetail'\r\n\r\n\r\nexport default class Organisation extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hide: false,\r\n        };\r\n    }\r\n\r\n    handleChange = (name, value) => this.setState({ [name]: value });\r\n\r\n    render() {\r\n        const props = this.props\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <OrganisationTitle {...props} />\r\n                </Row>\r\n                <hr style={{ margin: 0, marginBottom: \"1rem\", border: \"1px solid #00ABD4\", background: \"#00ABD4\" }}></hr>\r\n                <Row>\r\n                    <OrganisationDetail {...props} hide={this.state.hide} handleChange={this.handleChange} />\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}","import OrganisationEmployees from './OrganisationEmployees'\r\n\r\nexport default OrganisationEmployees;","import React from 'react';\r\nimport { Col, Grid, Row } from 'react-bootstrap';\r\nimport OrganisationTree from '../OrganisationTree';\r\nimport OrganisationTable from '../OrganisationTable';\r\nimport Organisation from '../Organisation';\r\nimport appConfig from '../../../config/';\r\nimport { sortBy, filter } from '../constants';\r\nimport '../OrganisationEmployees.css';\r\n\r\nclass OrganisationEmployees extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: { companyId: 0, name: \"\", locations: [], workgroups: [], employees: [] },\r\n            filterBy: filter.DEFAULT,\r\n            filterValueId: \"\",\r\n            sortBy: sortBy.NAME,\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getData();\r\n    }\r\n\r\n    getData = async () => {\r\n        const onSuccess = (data) => this.setState({ data: data });\r\n        fetch(appConfig.settings.REACT_APP_API_URL, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n\r\n        })\r\n            .then((response) => response.json())\r\n            .then((data) => onSuccess(data));\r\n    }\r\n\r\n    handleChange = (name, value) => this.setState({ [name]: value });\r\n\r\n    handleFilterChange = (filterBy, filterValueId) =>\r\n        this.setState({\r\n            filterBy: filterBy,\r\n            filterValueId: filterValueId\r\n        });\r\n\r\n    handleSortByChange = (sortBy) => this.setState({ sortBy: sortBy, });\r\n\r\n    resetfilterValueIds = () => this.setState({\r\n        filterBy: filter.DEFAULT,\r\n        filterValueId: \"\",\r\n        sortBy: sortBy.NAME,\r\n    })\r\n\r\n    render() {\r\n        const { data, filterBy, filterValueId, sortBy } = this.state;\r\n        return (\r\n            <Grid>\r\n                <Row>\r\n                    <Col lg={3} sm={4} md={12}>\r\n                            <OrganisationTree\r\n                                name={data.name}\r\n                                companyId={data.id}\r\n                                locations={data.locations}\r\n                                workgroups={data.workgroups}\r\n                                handleChange={this.handleChange}\r\n                                handleFilterChange={this.handleFilterChange}\r\n                                resetfilterValueIds={this.resetfilterValueIds}\r\n                            />\r\n                    </Col>\r\n                    <Col lg={9} sm={12} md={13}>\r\n                        <Organisation {...this.state.data} {...this.state} />\r\n                        <Row>\r\n                            <OrganisationTable\r\n                                filterBy={filterBy}\r\n                                filterValueId={filterValueId}\r\n                                sortBy={sortBy}\r\n                                {...this.state.data}\r\n                                handleSortByChange={this.handleSortByChange}\r\n                            />\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OrganisationEmployees;","import './App.css';\nimport OrganisationEmployees from './components/OrganisationEmployees';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">     \n      <OrganisationEmployees />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = require('./' + (process.env.REACT_APP_ENV || 'local'));"],"sourceRoot":""}