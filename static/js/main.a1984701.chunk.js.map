{"version":3,"sources":["config/prd.js","components/OrganisationEmployees/constants.js","components/OrganisationEmployees/LocationDetail/LocationDetail.jsx","components/OrganisationEmployees/LocationDetail/index.jsx","components/OrganisationEmployees/OrganisationTree/WorkGroups/index.jsx","components/OrganisationEmployees/OrganisationTree/WorkGroups/WorkGroups.jsx","components/OrganisationEmployees/OrganisationTree/LocationTab/index.jsx","components/OrganisationEmployees/OrganisationTree/LocationTab/LocationTab.jsx","components/OrganisationEmployees/OrganisationTree/index.jsx","components/OrganisationEmployees/OrganisationTree/OrganisationTree.jsx","components/OrganisationEmployees/OrganisationTable/EmployeesTableHeader/index.jsx","components/OrganisationEmployees/OrganisationTable/EmployeesTableHeader/EmployeesTableHeader.jsx","components/OrganisationEmployees/OrganisationTable/EmployeesTableRow/index.jsx","components/OrganisationEmployees/OrganisationTable/EmployeesTableRow/EmployeesTableRow.jsx","components/OrganisationEmployees/OrganisationTable/EmployeesTableBody/index.jsx","components/OrganisationEmployees/OrganisationTable/EmployeesTableBody/EmployeesTableBody.jsx","components/OrganisationEmployees/OrganisationTable/index.jsx","components/OrganisationEmployees/OrganisationTable/OrganisationTable.jsx","components/OrganisationEmployees/Organisation/OrganisationTitle/index.jsx","components/OrganisationEmployees/Organisation/OrganisationTitle/OrganisationTitle.jsx","components/OrganisationEmployees/Organisation/OrganisationDetail/OrganisationDetail.jsx","components/OrganisationEmployees/Organisation/OrganisationDetail/index.jsx","components/OrganisationEmployees/Organisation/index.jsx","components/OrganisationEmployees/Organisation/Organisation.jsx","components/OrganisationEmployees/index.jsx","components/OrganisationEmployees/OrganisationEmployees/OrganisationEmployees.jsx","App.js","reportWebVitals.js","index.js","config/index.js"],"names":["exports","settings","REACT_APP_API_URL","sort","filter","columns","datafield","caption","LocationDetail","className","this","props","city","maxStaffOnLeave","workPattern","React","Component","WorkgroupDetail","name","leaderName","buildData","array","filterBy","filterValueId","data","l","id","leader","isLocation","isWorkgroup","locations","workgroups","component","style","marginBottom","color","cursor","Panel","Body","padding","Workgroups","showAllHandler","value","handleFilterChange","isSelectedStyle","workgroupId","selectedTreeId","backgroundColor","ret","w","locationId","location","isActive","map","collapsible","onClick","filterByWorkgroupHandler","margin","push","length","state","sortBy","LocationTab","PanelGroup","accordion","eventKey","Heading","Title","display","toggle","OrganisationTree","setState","selectedLocation","tabs","companyId","index","resetFilters","resetfilterValueIds","console","log","Label","EmployeesTableHeader","renderTh","column","float","handleSortByChange","sortHelper","c","EmployeesTableRow","renderTd","e","firstName","lastName","href","moment","leaveYearStartDate","format","employees","colSpan","textAlign","EmployeesTableBody","getMutatedEmployeeList","showInactiveEmployees","mutatedList","a","b","filteredWorkGroupsBySelectedLocation","some","OrganisationTable","handleChange","Table","striped","bordered","condensed","hover","responsive","Checkbox","checked","onChange","OrganisationTitle","settingsPanel","email","overtimeEnabled","OrganisationDetail","renderDetailField","key","toString","keys","Object","hide","k","i","Organisation","Row","border","background","OrganisationEmployees","componentDidMount","getData","onSuccess","fetch","appConfig","headers","then","response","json","Grid","Col","lg","sm","md","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","require"],"mappings":"mJAKAA,EAAQC,SAJR,CACIC,kBAAkB,gB,sMCFTC,EACH,YADGA,EAEH,OAFGA,EAGE,gBAHFA,EAIA,UAgBAC,EACC,WADDA,EAEE,YAFFA,EAGA,UAGAC,EAAU,CACnB,CAAEC,UAAW,OAAQC,QAAS,QAC9B,CAAED,UAAW,OAAQC,QAAS,QAC9B,CAAED,UAAW,gBAAiBC,QAAS,aACvC,CAAED,UAAW,qBAAsBC,QAAS,sBAC5C,CAAED,UAAW,GAAIC,QAAS,QAC1B,CAAED,UAAW,sBAAuBC,QAAS,oBAC7C,CAAED,UAAW,aAAcC,QAAS,mBACpC,CAAED,UAAW,iBAAkBC,QAAS,K,OC9B/BC,EAAb,4JAEI,WAAU,IAAD,IACL,OACI,qCACI,qBAAIC,UAAU,gBAAd,UAA+BC,KAAKC,MAAMC,KAA1C,OACA,8BAAG,yDAAH,cAAyCF,KAAKC,MAAME,uBAApD,QAAuE,SACvE,8BAAG,mDAAH,cAAmCH,KAAKC,MAAMG,mBAA9C,QAA6D,gBAP7E,GAAoCC,IAAMC,WAa7BC,EAAb,4JAEI,WAAU,IAAD,IACL,OACI,qCACI,qBAAIR,UAAU,gBAAd,UAA+BC,KAAKC,MAAMO,KAA1C,OACA,8BAAG,yDAAH,cAAyCR,KAAKC,MAAME,uBAApD,QAAuE,SACvE,8BAAG,6CAAH,cAA6BH,KAAKC,MAAMQ,kBAAxC,QAAsD,gBAPtE,GAAqCJ,IAAMC,WCf5BR,E,4MD+BXY,UAAY,WAA8BC,GAAW,IAAtCC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,cACjBC,EAAOH,EAAMjB,QAAO,SAAAqB,GAAC,OAAIA,EAAEC,KAAOH,KAAe,GACrD,GAAID,IAAalB,EAAiB,CAAC,IAAD,IACxBO,EAAQ,CACVC,KAAMY,EAAKZ,KACXC,gBAAe,UAAEW,EAAKX,uBAAP,QAA0B,MACzCC,YAAW,UAAEU,EAAKV,mBAAP,QAAsB,OAErC,OAAO,cAAC,EAAD,eAAoBH,IAE/B,GAAIW,IAAalB,EAAkB,CAAC,IAAD,MACzBO,EAAQ,CACVO,KAAMM,EAAKN,KACXC,WAAU,oBAAEK,EAAKG,cAAP,aAAE,EAAaT,YAAf,QAAuB,MACjCL,gBAAe,UAAEW,EAAKX,uBAAP,QAA0B,OAE7C,OAAO,cAAC,EAAD,eAAqBF,M,4CAIpC,WACI,IAAMiB,EAAalB,KAAKC,MAAMW,WAAalB,EACrCyB,EAAcnB,KAAKC,MAAMW,WAAalB,EAExCiB,EAAQO,EAAalB,KAAKC,MAAMa,KAAKM,UAAYD,EAAcnB,KAAKC,MAAMa,KAAKO,WAAa,GAC1FC,EAAYtB,KAAKU,UAAUV,KAAKC,MAAOU,GAE7C,OACI,yCAAIX,KAAKC,MAAMW,WAAalB,GACxB,gCACI,qBAAI6B,MAAO,CAAEC,aAAc,OAAQC,MAAO,UAAWC,OAAQ,WAA7D,UACKR,GAAc,kBACdC,GAAe,sBAGpB,cAACQ,EAAA,EAAD,UACI,cAACA,EAAA,EAAMC,KAAP,CAAYL,MAAO,CAAEM,QAAS,OAA9B,SACKP,gB,GAvCcjB,IAAMC,W,0BE7BlCwB,ECGf,kDACI,WAAY7B,GAAQ,IAAD,8BACf,cAAMA,IAMV8B,eAAiB,SAACC,GAAD,OAAW,EAAK/B,MAAMgC,mBAAmBvC,EAAiBsC,IAPxD,EASnBE,gBAAkB,SAACC,GAAD,OAAiBA,IAAgB,EAAKlC,MAAMmC,eAAiB,CAAEC,gBAAiB,UAAWZ,MAAO,SAAa,IAT9G,EAWnBJ,WAAa,WACT,IAAIiB,EAAM,EAAKrC,MAAMoB,WAChB3B,QAAO,SAAA6C,GAAC,OAAIA,EAAEC,aAAe,EAAKvC,MAAMwC,SAASzB,IAAMuB,EAAEG,YACzDC,KAAI,SAACJ,GAAD,OACD,gCACI,cAACZ,EAAA,EAAMC,KAAP,CACIgB,aAAW,EACX7C,UAAU,2BACV8C,QAAS,kBAAM,EAAK5C,MAAM6C,yBAAyBP,EAAEvB,GAAItB,EAAkB,EAAKO,MAAMwC,WACtFlB,MAAO,EAAKW,gBAAgBK,EAAEvB,IAJlC,SAMKuB,EAAE/B,OAEP,oBAAIe,MAAO,CAAEwB,OAAQ,OATfR,EAAE/B,SA2BpB,OAfA8B,EAAIU,KACA,gCACI,cAACrB,EAAA,EAAMC,KAAP,CACIiB,QAAS,WACL,EAAKd,eAAe,EAAK9B,MAAMwC,SAASjC,MACxC,EAAKP,MAAM6C,yBAAyB,EAAK7C,MAAMwC,SAASzB,GAAItB,IAEhEkD,aAAW,EACX7C,UAAU,2BACVwB,MAAO,EAAKW,gBAAgB,EAAKjC,MAAMwC,SAASzB,IAPpD,SASK,EAAKf,MAAMwC,SAASjC,OAEzB,oBAAIe,MAAO,CAAEwB,OAAQ,OAZfT,EAAIW,SAcXX,GAxCP,EAAKY,MAAQ,CACTC,OAAQ,IAHG,EADvB,0CA8CI,WACI,OACInD,KAAKqB,iBAhDjB,GAAgChB,IAAMC,WCHvB8C,ECGf,4JACI,WAAU,IAAD,EAC4BpD,KAAKC,MAA9BwC,EADH,EACGA,SAAUpB,EADb,EACaA,WAClB,OACI,cAACgC,EAAA,EAAD,CACIC,WAAS,EAETtC,GAAIyB,EAASjC,KACbe,MAAO,CAAEC,aAAc,UAJ3B,SAMI,eAACG,EAAA,EAAD,CAAO4B,SAAUvD,KAAKC,MAAMsD,SAA5B,UACI,cAAC5B,EAAA,EAAM6B,QAAP,CAAezD,UAAU,yBAAzB,SACI,8BACI,eAAC4B,EAAA,EAAM8B,MAAP,CAAalC,MAAO,CAAEmC,QAAS,UAAYC,QAAM,EAAjD,UAAmDlB,EAASjC,KAA5D,WAGR,cAAC,EAAD,aACIiC,SAAUA,EACVpB,WAAYA,GACRrB,KAAKC,YAbZwC,EAASjC,UAN9B,GAAiCH,IAAMC,WCHxBsD,ECIf,kDACI,WAAY3D,GAAQ,IAAD,8BACf,cAAMA,IAOV6C,yBAA2B,SAACX,EAAazC,EAAQ+C,GAC7C,EAAKoB,SAAS,CAAEzB,eAAgBD,EAAa2B,iBAAkBrB,IAC/D,EAAKxC,MAAMgC,mBAAmBvC,EAAQyC,IAVvB,EAanB4B,KAAO,WAAO,IAAD,EACwB,EAAK9D,MAA9BmB,EADC,EACDA,UAAW4C,EADV,EACUA,UACnB,OAAO5C,EAAU1B,QAAO,SAAAqB,GAAC,OAAIA,EAAEiD,YAAcA,GAAajD,EAAE2B,YACvDC,KAAI,SAACF,EAAUwB,GAAX,OACD,cAAC,EAAD,aAEIxB,SAAUA,EACVK,yBAA0B,EAAKA,yBAC/BV,eAAgB,EAAKc,MAAMd,gBACvB,EAAKnC,OAJJ,KAAOgE,OAlBT,EA0BnB/B,gBAAkB,kBAAoC,IAA9B,EAAKgB,MAAMd,eAAuB,CAAEC,gBAAiB,UAAWZ,MAAO,SAAa,CAACY,gBAAiB,YA1B3G,EA4BnB6B,aAAe,WACX,EAAKjE,MAAMkE,sBACX,EAAKN,SAAS,CAAEzB,eAAgB,KA5BhC,EAAKc,MAAQ,CACTd,eAAgB,EAChB0B,iBAAkB,IAJP,EADvB,0CAkCI,WAEI,OADAM,QAAQC,IAAIrE,KAAKkD,MAAMd,eAAgB,gCAEnC,gCACI,oBAAIb,MAAO,CAAEC,aAAc,OAAQC,MAAO,UAAWC,OAAQ,WAA7D,SACI,cAAC4C,EAAA,EAAD,CACIzB,QAAS7C,KAAKkE,aACdnE,UAAU,mBAFd,SAGKC,KAAKC,MAAMO,SAInBR,KAAK+D,OACF,cAACpC,EAAA,EAAD,CACI5B,UAAU,0BACV8C,QAAS7C,KAAKkE,aACd3C,MAAOvB,KAAKkC,kBAHhB,sBAOA,oBAAIX,MAAO,CAACwB,OAAO,YAtDvC,GAAsC1C,IAAMC,W,0BCJ7BiE,ECIf,kDACI,WAAYtE,GAAQ,IAAD,8BACf,cAAMA,IAKVuE,SAAW,SAACC,GAGR,MAAyB,SAArBA,EAAO7E,WAA6C,SAArB6E,EAAO7E,WAA6C,kBAArB6E,EAAO7E,UAC9D,+BAA4B6E,EAAO5E,QACtC,cAAC,IAAD,CACI0B,MAAO,CAAEmD,MAAO,QAAShD,OAAQ,WACjCmB,QAAS,kBAAM,EAAK5C,MAAM0E,mBVbpB,SAAC3C,GACvB,OAAQA,GACJ,IAAK,OACD,OAAOvC,EACX,IAAK,OACD,OAAOA,EACX,IAAK,gBACD,OAAOA,EACX,QACI,OAAOA,GUI8CmF,CAAWH,EAAO7E,iBAHvD6E,EAAO7E,WAOhB,6BAA4B6E,EAAO5E,SAA1B4E,EAAO7E,YAf3B,EAAKsD,MAAQ,GAFE,EADvB,0CAqBI,WAAU,IAAD,OACL,OACI,gCACI,6BACKvD,EAAQgD,KAAI,SAAAkC,GAAC,OAAI,EAAKL,SAASK,cAzBpD,GAA0CxE,IAAMC,W,iBCJjCwE,ECEf,kDACI,WAAY7E,GAAQ,IAAD,8BACf,cAAMA,IAKV8E,SAAW,SAACC,EAAGpF,GAEX,MAAkB,SAAdA,EACO,oBAAGG,UAAU,gBAAb,UAA8BiF,EAAEC,UAAhC,IAA4CD,EAAEE,YAClC,mBAAdtF,EACE,mBAAGuF,KAAK,IAAIpF,UAAU,gBAAtB,8BACY,uBAAdH,EACEwF,IAAOJ,EAAEK,oBAAoBC,OAAO,UAEpCN,EAAEpF,IAbb,EAAKsD,MAAQ,GAFE,EADvB,0CAmBI,WAAU,IAAD,OACGqC,EAAcvF,KAAKC,MAAnBsF,UACR,OACI,mCAE6B,IAArBA,EAAUtC,OACN,6BAAI,oBAAIuC,QAAS7F,EAAQsD,OAAQ1B,MAAO,CAAEkE,UAAW,UAAjD,+CAEJF,EAAU5C,KAAI,SAACqC,EAAGf,GAAJ,OACV,6BAEQtE,EAAQgD,KAAI,SAACkC,EAAGZ,GAAJ,OACR,6BACK,EAAKc,SAASC,EAAGH,EAAEjF,YADfiF,EAAEjF,UAAYqE,OAHnC,aAAeA,aA5B3C,GAAuC5D,IAAMC,WCF9BoF,ECGf,kDACI,WAAYzF,GAAQ,IAAD,8BACf,cAAMA,IAKV0F,uBAAyB,WAAM,MAE+D,EAAK1F,MAAvFsF,EAFmB,EAEnBA,UAAWpC,EAFQ,EAERA,OAAQvC,EAFA,EAEAA,SAAUC,EAFV,EAEUA,cAAe+E,EAFzB,EAEyBA,sBAAuBvE,EAFhD,EAEgDA,WAEvEwE,EAAcN,EAIlB,GAHApC,IAAW1D,EACPoG,EAAYpG,MAAK,SAACqG,EAAGC,GAAJ,OAAWD,EAAE3C,GAAU4C,EAAE5C,GAAW,EAAM4C,EAAE5C,GAAU2C,EAAE3C,IAAY,EAAI,KACzF0C,EAAYpG,MAAK,SAACqG,EAAGC,GAAJ,OAAWD,EAAE9E,GAAK+E,EAAE/E,GAAM,EAAM+E,EAAE/E,GAAK8E,EAAE9E,IAAO,EAAI,KACrEJ,IAAalB,EACjB,CACI,IAAMsG,EAAuC3E,EAAW3B,QAAO,SAAA6C,GAAC,OAAIA,EAAEC,aAAe3B,KACrFgF,EAAcA,EAAYnG,QAAO,SAAAsF,GAAC,OAAIgB,EAAqCC,MAAK,SAAA1D,GAAC,OAAIA,EAAEvB,KAAOgE,EAAE7C,kBAMpG,OAHIvB,IAAalB,IACbmG,EAAcA,EAAYnG,QAAO,SAAAsF,GAAC,OAAIA,EAAE7C,cAAgBtB,MAErD+E,EAAwBC,EAAYnG,QAAO,SAAAsF,GAAC,OAAIA,EAAEtC,YAAYmD,GArBrE,EAAK3C,MAAQ,GAFE,EADvB,0CA4BI,WACI,IAAMqC,EAAYvF,KAAK2F,yBACvB,OACI,gCACI,cAAC,EAAD,CAAmBJ,UAAWA,UAhC9C,GAAwClF,IAAMC,WCH/B4F,E,kDCIX,WAAYjG,GAAQ,IAAD,8BACf,cAAMA,IAMVkG,aAAe,SAAC3F,EAAMwB,GAAP,OAAiB,EAAK6B,SAAL,eAAiBrD,EAAOwB,KALpD,EAAKkB,MAAQ,CACT0C,uBAAuB,GAHZ,E,0CASnB,WAAU,IAAD,OACDA,EAAwB5F,KAAKkD,MAAM0C,sBACvC,OACI,qCACI,eAACQ,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,WAAS,EAACC,OAAK,EAACC,YAAU,EAAlD,UACI,cAAC,EAAD,eAA0BzG,KAAKC,QAC/B,cAAC,EAAD,2BAAwBD,KAAKC,OAA7B,IAAoC2F,sBAAuBA,QAE/D,sBAAKrE,MAAO,CAAEmD,MAAO,SAArB,UACI,cAACgC,EAAA,EAAD,CACIC,SAAUf,EACVgB,SAAU,kBAAM,EAAKT,aAAa,yBAA0BP,IAC5DrE,MAAO,CAAEmC,QAAS,YAJ1B,qC,GAlB+BrD,IAAMC,W,QCHtCuG,E,4JCGX,WACI,OACI,sBAAKtF,MAAO,CAAEmC,QAAS,UAAvB,UACI,qBAAI3D,UAAU,gBAAgBwB,MAAO,CAAEmD,MAAO,OAAQhB,QAAS,UAA/D,UACI,cAAC,IAAD,IACC,IAAK1D,KAAKC,MAAMO,QAErB,mBAAGT,UAAU,qBAAb,4B,GAR+BM,IAAMC,WCC/CwG,EAAgB,CAClBC,MAAO,UACP1B,mBAAoB,iCACpBjF,YAAa,iBACbD,gBAAiB,0CACjB6G,gBAAiB,sBCRNC,E,4MDaXC,kBAAoB,SAACC,GAAS,IAAD,IACzB,MAAY,uBAARA,EACO,qCAAE,iCAASL,EAAcK,KAAzB,IAAyC/B,IAAO,EAAKnF,MAAMoF,oBAAoBC,OAAO,UAAtF,QAGA,qCACH,iCAASwB,EAAcK,KACd,gBAARA,EAAA,UACG,EAAKlH,MAAMkH,UADd,aACG,EAAiB3G,KADpB,UAEG,EAAKP,MAAMkH,UAFd,aAEG,EAAiBC,e,4CAKjC,WAAU,IAAD,OACCC,EAAOC,OAAOD,KAAKP,GACzB,OACI,cAACnF,EAAA,EAAD,UACI,eAACA,EAAA,EAAMC,KAAP,CAAYL,MAAO,CAAEM,QAAS,OAA9B,UAEK7B,KAAKC,MAAMsH,KACR,KACEF,EAAK1E,KAAI,SAAC6E,EAAGC,GAAJ,OACP,4BACK,EAAKP,kBAAkBM,IADpBC,MAIhB,mBACIlG,MAAO,CAACmD,MAAM,SACd3E,UAAU,wCACV8C,QAAS,kBAAM,EAAK5C,MAAMkG,aAAa,QAAS,EAAKlG,MAAMsH,OAH/D,SAKKvH,KAAKC,MAAMsH,KAAO,YAAc,uB,GAlCTlH,IAAMC,WEXvCoH,E,kDCKX,WAAYzH,GAAQ,IAAD,8BACf,cAAMA,IAMVkG,aAAe,SAAC3F,EAAMwB,GAAP,OAAiB,EAAK6B,SAAL,eAAiBrD,EAAOwB,KALpD,EAAKkB,MAAQ,CACTqE,MAAM,GAHK,E,0CASnB,WACI,IAAMtH,EAAQD,KAAKC,MACnB,OACI,gCACI,cAAC0H,EAAA,EAAD,UACI,cAAC,EAAD,eAAuB1H,MAE3B,oBAAIsB,MAAO,CAAEwB,OAAQ,EAAGvB,aAAc,OAAQoG,OAAQ,oBAAqBC,WAAY,aACvF,cAACF,EAAA,EAAD,UACI,cAAC,EAAD,2BAAwB1H,GAAxB,IAA+BsH,KAAMvH,KAAKkD,MAAMqE,KAAMpB,aAAcnG,KAAKmG,yB,GAnBnD9F,IAAMC,W,iBCJjCwH,E,kDCSX,WAAY7H,GAAQ,IAAD,8BACf,cAAMA,IASV8H,kBAAoB,WAChB,EAAKC,WAXU,EAcnBA,QAdmB,sBAcT,4BAAAlC,EAAA,sDACAmC,EAAY,SAACnH,GAAD,OAAU,EAAK+C,SAAS,CAAE/C,KAAMA,KAClDoH,MAAMC,IAAU5I,SAASC,kBAAmB,CACxC4I,QAAS,CACL,eAAgB,mBAChB,OAAU,sBAIbC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACvH,GAAD,OAAUmH,EAAUnH,MAVxB,2CAdS,EA2BnBqF,aAAe,SAAC3F,EAAMwB,GAAP,OAAiB,EAAK6B,SAAL,eAAiBrD,EAAOwB,KA3BrC,EA6BnBC,mBAAqB,SAACrB,EAAUC,GAAX,OACjB,EAAKgD,SAAS,CACVjD,SAAUA,EACVC,cAAeA,KAhCJ,EAmCnB8D,mBAAqB,SAACxB,GAAD,OAAY,EAAKU,SAAS,CAAEV,OAAQA,KAnCtC,EAqCnBgB,oBAAsB,kBAAM,EAAKN,SAAS,CACtCjD,SAAUlB,EACVmB,cAAe,GACfsC,OAAQ1D,KAtCR,EAAKyD,MAAQ,CACTpC,KAAM,CAAEkD,UAAW,EAAGxD,KAAM,GAAIY,UAAW,GAAIC,WAAY,GAAIkE,UAAW,IAC1E3E,SAAUlB,EACVmB,cAAe,GACfsC,OAAQ1D,GANG,E,0CA2CnB,WAAU,IAAD,EAC6CO,KAAKkD,MAA/CpC,EADH,EACGA,KAAMF,EADT,EACSA,SAAUC,EADnB,EACmBA,cAAesC,EADlC,EACkCA,OACvC,OACI,cAACqF,EAAA,EAAD,UACI,eAACb,EAAA,EAAD,WACI,eAACc,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAvB,UACI,cAACH,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAzB,SACI,cAAC,EAAD,CACIpI,KAAMM,EAAKN,KACXwD,UAAWlD,EAAKE,GAChBI,UAAWN,EAAKM,UAChBC,WAAYP,EAAKO,WACjB8E,aAAcnG,KAAKmG,aACnBlE,mBAAoBjC,KAAKiC,mBACzBkC,oBAAqBnE,KAAKmE,wBAIlC,cAACsE,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAzB,SACI,cAAC,EAAD,eAAoB5I,KAAKkD,aAIjC,eAACuF,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAxB,UACI,cAAC,EAAD,eAAkB5I,KAAKkD,MAAMpC,OAC7B,cAAC6G,EAAA,EAAD,UACI,cAAC,EAAD,yBACI/G,SAAUA,EACVC,cAAeA,EACfsC,OAAQA,GACJnD,KAAKkD,MAAMpC,MAJnB,IAKI6D,mBAAoB3E,KAAK2E,oC,GA3ErBtE,IAAMC,W,OCE3BuI,OARf,WACE,OACE,qBAAK9I,UAAU,MAAf,SACE,cAAC,EAAD,OCKS+I,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,M,wCChBAa,EAAOrK,QAAUsK,EAAQ,M","file":"static/js/main.a1984701.chunk.js","sourcesContent":["var settings = \r\n{\r\n    REACT_APP_API_URL: `./data.json`\r\n}\r\n\r\nexports.settings = settings;","export const sort = {\r\n    NAME: \"firstName\",\r\n    ROLE: \"role\",\r\n    WORKGROUP: \"workgroupName\",\r\n    DEFAULT: \"default\"\r\n}\r\n\r\nexport const sortHelper = (value) => {\r\n    switch (value) {\r\n        case \"name\":\r\n            return sort.NAME;\r\n        case \"role\":\r\n            return sort.ROLE;\r\n        case \"workgroupName\":\r\n            return sort.WORKGROUP;\r\n        default:\r\n            return sort.DEFAULT\r\n    }\r\n}\r\n\r\nexport const filter = {\r\n    LOCATION: \"location\",\r\n    WORKGROUP: \"workgroup\",\r\n    DEFAULT: \"default\"\r\n}\r\n\r\nexport const columns = [\r\n    { datafield: \"name\", caption: \"Name\" },\r\n    { datafield: \"role\", caption: \"Role\" },\r\n    { datafield: \"workgroupName\", caption: \"Workgroup\" },\r\n    { datafield: \"leaveYearStartDate\", caption: \"Leave Year (dd/MM)\" },\r\n    { datafield: \"\", caption: \"Info\" },\r\n    { datafield: \"employmentStartDate\", caption: \"Employment Dates\" },\r\n    { datafield: \"bradfactor\", caption: \"Bradford Factor\" },\r\n    { datafield: \"viewLeaveTaken\", caption: \"\" },\r\n]","import React from 'react';\r\nimport { Panel } from 'react-bootstrap';\r\nimport { filter } from '../constants';\r\n\r\nexport class LocationDetail extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <h4 className=\"lw-light-blue\">{this.props.city}:</h4>\r\n                <p><strong>Max staff on leave:</strong> {this.props.maxStaffOnLeave ?? 'N/A'}</p>\r\n                <p><strong>Work pattern:</strong> {this.props.workPattern ?? 'N/A'}</p>              \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport class WorkgroupDetail extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <h4 className=\"lw-light-blue\">{this.props.name}:</h4>\r\n                <p><strong>Max staff on leave:</strong> {this.props.maxStaffOnLeave ?? 'N/A'}</p>\r\n                <p><strong>Leader:</strong> {this.props.leaderName ?? 'N/A'}</p>\r\n               \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default class CompanyDetail extends React.Component {\r\n\r\n    buildData = ({ filterBy, filterValueId }, array) => {\r\n        let data = array.filter(l => l.id === filterValueId)[0];\r\n        if (filterBy === filter.LOCATION) {\r\n            const props = {\r\n                city: data.city,\r\n                maxStaffOnLeave: data.maxStaffOnLeave ?? 'N/A',\r\n                workPattern: data.workPattern ?? 'N/A'\r\n            };\r\n            return <LocationDetail {...props} />\r\n        }\r\n        if (filterBy === filter.WORKGROUP) {\r\n            const props = {\r\n                name: data.name,\r\n                leaderName: data.leader?.name ?? 'N/A',\r\n                maxStaffOnLeave: data.maxStaffOnLeave ?? 'N/A'\r\n            }\r\n            return <WorkgroupDetail {...props} />\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const isLocation = this.props.filterBy === filter.LOCATION;\r\n        const isWorkgroup = this.props.filterBy === filter.WORKGROUP;\r\n\r\n        let array = isLocation ? this.props.data.locations : isWorkgroup ? this.props.data.workgroups : [];\r\n        const component = this.buildData(this.props, array);\r\n\r\n        return (\r\n            <> {this.props.filterBy !== filter.DEFAULT &&\r\n                <div>\r\n                    <h3 style={{ marginBottom: \"2rem\", color: \"#00ABD4\", cursor: \"pointer\" }}>\r\n                        {isLocation && \"Location Detail\"}\r\n                        {isWorkgroup && \"Workgroup Detail\"}\r\n                    </h3>\r\n\r\n                    <Panel>\r\n                        <Panel.Body style={{ padding: \"8px\" }}>\r\n                            {component}\r\n                        </Panel.Body>\r\n                    </Panel>\r\n\r\n                </div>}\r\n            </>\r\n        )\r\n    }\r\n}","import LocationDetail from './LocationDetail'\r\n\r\nexport default LocationDetail;","import { Workgroups } from './WorkGroups'\r\n\r\nexport default Workgroups;","import React from 'react';\r\nimport { Panel } from 'react-bootstrap';\r\nimport '../../OrganisationEmployees.css';\r\nimport { filter } from '../../constants'\r\n\r\nexport class Workgroups extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sortBy: \"\",\r\n        };\r\n    }\r\n\r\n    showAllHandler = (value) => this.props.handleFilterChange(filter.LOCATION, value);\r\n\r\n    isSelectedStyle = (workgroupId) => workgroupId === this.props.selectedTreeId ? { backgroundColor: \"#00ABD4\", color: \"white\", } : {};\r\n\r\n    workgroups = () => {\r\n        let ret = this.props.workgroups\r\n            .filter(w => w.locationId === this.props.location.id && w.isActive)\r\n            .map((w) =>\r\n                <div key={w.name}>                   \r\n                    <Panel.Body\r\n                        collapsible\r\n                        className=\"noselect tree-workgroups\"\r\n                        onClick={() => this.props.filterByWorkgroupHandler(w.id, filter.WORKGROUP, this.props.location)}\r\n                        style={this.isSelectedStyle(w.id)}\r\n                    >\r\n                        {w.name} \r\n                    </Panel.Body>\r\n                    <hr style={{ margin: 0 }}></hr>\r\n                </div>\r\n            );\r\n        ret.push(\r\n            <div key={ret.length}>\r\n                <Panel.Body\r\n                    onClick={() => {\r\n                        this.showAllHandler(this.props.location.name);\r\n                        this.props.filterByWorkgroupHandler(this.props.location.id, filter.LOCATION)\r\n                    }}\r\n                    collapsible\r\n                    className=\"noselect tree-workgroups\"\r\n                    style={this.isSelectedStyle(this.props.location.id)}\r\n                >\r\n                    {this.props.location.name}\r\n                </Panel.Body>\r\n                <hr style={{ margin: 0 }}></hr>\r\n            </div>);\r\n        return ret;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.workgroups()\r\n        )\r\n\r\n    }\r\n}","import { LocationTab } from './LocationTab'\r\n\r\nexport default LocationTab;","import React from 'react';\r\nimport { PanelGroup, Panel } from 'react-bootstrap';\r\nimport '../../OrganisationEmployees.css';\r\nimport Workgroups from '../WorkGroups'\r\n\r\nexport class LocationTab extends React.Component {\r\n    render() {\r\n        const { location, workgroups } = this.props\r\n        return (\r\n            <PanelGroup\r\n                accordion\r\n                key={location.name}\r\n                id={location.name}\r\n                style={{ marginBottom: \"0.5rem\" }}\r\n            >\r\n                <Panel eventKey={this.props.eventKey}>\r\n                    <Panel.Heading className=\"noselect tree-location\">\r\n                        <div>\r\n                            <Panel.Title style={{ display: \"inline\" }} toggle>{location.name} </Panel.Title>                            \r\n                        </div>\r\n                    </Panel.Heading>\r\n                    <Workgroups\r\n                        location={location}\r\n                        workgroups={workgroups}\r\n                        {...this.props}\r\n                    />\r\n\r\n                </Panel>\r\n            </PanelGroup>\r\n        );\r\n    }\r\n}","import { OrganisationTree } from './OrganisationTree'\r\n\r\nexport default OrganisationTree;","import React from 'react';\r\nimport { Label, Panel } from 'react-bootstrap';\r\nimport '../OrganisationEmployees.css';\r\nimport LocationTab from './LocationTab'\r\n\r\n\r\nexport class OrganisationTree extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedTreeId: 0,\r\n            selectedLocation: ''\r\n        };\r\n    }\r\n\r\n    filterByWorkgroupHandler = (workgroupId, filter, location) => {\r\n        this.setState({ selectedTreeId: workgroupId, selectedLocation: location });\r\n        this.props.handleFilterChange(filter, workgroupId);\r\n    }\r\n\r\n    tabs = () => {\r\n        const { locations, companyId } = this.props;\r\n        return locations.filter(l => l.companyId === companyId && l.isActive)\r\n            .map((location, index) => (\r\n                <LocationTab\r\n                    key={'lt' + index}\r\n                    location={location}\r\n                    filterByWorkgroupHandler={this.filterByWorkgroupHandler}\r\n                    selectedTreeId={this.state.selectedTreeId}\r\n                    {...this.props} />\r\n            ));\r\n    }\r\n\r\n    isSelectedStyle = () => this.state.selectedTreeId === 0 ? { backgroundColor: \"#00ABD4\", color: \"white\", } : {backgroundColor: \"#f5f5f5\" };\r\n\r\n    resetFilters = () => {\r\n        this.props.resetfilterValueIds()\r\n        this.setState({ selectedTreeId: 0 })\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.selectedTreeId, 'selectedTreeIdselectedTreeId');\r\n        return (\r\n            <div>\r\n                <h3 style={{ marginBottom: \"2rem\", color: \"#00ABD4\", cursor: \"pointer\" }}>\r\n                    <Label\r\n                        onClick={this.resetFilters}\r\n                        className=\"lw-bg-light-blue\">\r\n                        {this.props.name}\r\n                    </Label>\r\n                </h3>\r\n\r\n                {this.tabs()}\r\n                    <Panel\r\n                        className=\"company-detail-btn-text\"\r\n                        onClick={this.resetFilters}\r\n                        style={this.isSelectedStyle()}\r\n                    >\r\n                        Show all\r\n                    </Panel>\r\n                    <hr style={{margin:1}}></hr>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { EmployeesTableHeader } from './EmployeesTableHeader'\r\n\r\nexport default EmployeesTableHeader;","import React from 'react';\r\nimport { columns, sortHelper } from '../../constants'\r\nimport { FcAlphabeticalSortingAz } from \"react-icons/fc\";\r\n\r\n\r\n\r\nexport class EmployeesTableHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    renderTh = (column) => {\r\n        // should be refactored if more columns need a different formatter, this will do for now.\r\n\r\n        if (column.datafield === \"name\" || column.datafield === \"role\" || column.datafield === \"workgroupName\")\r\n            return <th key={column.datafield}>{column.caption}\r\n                <FcAlphabeticalSortingAz\r\n                    style={{ float: \"right\", cursor: \"pointer\" }}\r\n                    onClick={() => this.props.handleSortByChange(sortHelper(column.datafield))}\r\n                />\r\n            </th>\r\n        else\r\n            return <th key={column.datafield}>{column.caption}</th>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <thead>\r\n                <tr>\r\n                    {columns.map(c => this.renderTh(c))}\r\n                </tr>\r\n            </thead>\r\n        );\r\n    }\r\n}","import { EmployeesTableRow } from './EmployeesTableRow'\r\n\r\nexport default EmployeesTableRow;","import React from 'react';\r\nimport moment from 'moment';\r\nimport { columns } from '../../constants'\r\n\r\nexport class EmployeesTableRow extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    renderTd = (e, datafield) => {\r\n        // should be refactored if more columns need a different formatter, this will do for now.\r\n        if (datafield === \"name\")\r\n            return <p className=\"lw-light-blue\">{e.firstName} {e.lastName}</p>\r\n        else if (datafield === \"viewLeaveTaken\")\r\n            return <a href=\"#\" className=\"lw-light-blue\">View Leave Taken</a>\r\n        else if (datafield === \"leaveYearStartDate\")\r\n            return moment(e.leaveYearStartDate).format('DD/MMM');\r\n        else\r\n            return e[datafield];\r\n    }\r\n\r\n    render() {\r\n        const { employees } = this.props;\r\n        return (\r\n            <>\r\n                {\r\n                    employees.length === 0 ?\r\n                        <tr><td colSpan={columns.length} style={{ textAlign: \"center\" }}>There are no employees to show.</td></tr> :\r\n\r\n                        employees.map((e, index) =>\r\n                            <tr key={`tr-${index}`}>\r\n                                {\r\n                                    columns.map((c, index) =>\r\n                                        <td key={c.datafield + index}>\r\n                                            {this.renderTd(e, c.datafield)}\r\n                                        </td>\r\n                                    )\r\n                                }\r\n                            </tr>\r\n                        )\r\n                }\r\n            </>\r\n        );\r\n    }\r\n}","import { EmployeesTableBody } from './EmployeesTableBody'\r\n\r\nexport default EmployeesTableBody;","import React from 'react';\r\nimport { sort, filter } from '../../constants'\r\nimport EmployeesTableRow from '../EmployeesTableRow'\r\n\r\n\r\nexport class EmployeesTableBody extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    getMutatedEmployeeList = () => {\r\n        //next step refactor to redux\r\n        const { employees, sortBy, filterBy, filterValueId, showInactiveEmployees, workgroups } = this.props;\r\n\r\n        let mutatedList = employees;\r\n        sortBy !== sort.DEFAULT ?\r\n            mutatedList.sort((a, b) => (a[sortBy] > b[sortBy]) ? 1 : ((b[sortBy] > a[sortBy]) ? -1 : 0)) :\r\n            mutatedList.sort((a, b) => (a.id > b.id) ? 1 : ((b.id > a.id) ? -1 : 0))\r\n        if (filterBy === filter.LOCATION)\r\n        {\r\n            const filteredWorkGroupsBySelectedLocation = workgroups.filter(w => w.locationId === filterValueId)\r\n            mutatedList = mutatedList.filter(e => filteredWorkGroupsBySelectedLocation.some(w => w.id === e.workgroupId));\r\n        }\r\n          \r\n        if (filterBy === filter.WORKGROUP)\r\n            mutatedList = mutatedList.filter(e => e.workgroupId === filterValueId);\r\n        \r\n        return showInactiveEmployees ? mutatedList.filter(e => e.isActive) : mutatedList;\r\n    }\r\n\r\n\r\n    render() {\r\n        const employees = this.getMutatedEmployeeList();\r\n        return (\r\n            <tbody>\r\n                <EmployeesTableRow employees={employees}/>\r\n            </tbody>\r\n        );\r\n    }\r\n}","import OrganisationTable from './OrganisationTable'\r\n\r\nexport default OrganisationTable;","import React from 'react';\r\nimport { Checkbox, Table } from 'react-bootstrap';\r\nimport EmployeesTableHeader from './EmployeesTableHeader'\r\nimport EmployeesTableBody from './EmployeesTableBody'\r\n\r\nexport default class OrganisationTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showInactiveEmployees: true\r\n        };\r\n    }\r\n\r\n    handleChange = (name, value) => this.setState({ [name]: value });\r\n\r\n    render() {\r\n        let showInactiveEmployees = this.state.showInactiveEmployees;\r\n        return (\r\n            <>\r\n                <Table striped bordered condensed hover responsive>\r\n                    <EmployeesTableHeader {...this.props} />\r\n                    <EmployeesTableBody {...this.props} showInactiveEmployees={showInactiveEmployees} />\r\n                </Table>\r\n                <div style={{ float: \"right\" }}>\r\n                    <Checkbox\r\n                        checked={!showInactiveEmployees}\r\n                        onChange={() => this.handleChange(\"showInactiveEmployees\", !showInactiveEmployees)}\r\n                        style={{ display: \"inline\" }}\r\n                    /> show inactive employees\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import OrganisationTitle from './OrganisationTitle'\r\n\r\nexport default OrganisationTitle;","import React from 'react';\r\nimport { BsPencil } from \"react-icons/bs\";\r\n\r\n\r\nexport default class OrganisationTitle extends React.Component {\r\n    render() {\r\n        return (\r\n            <div style={{ display: \"inline\" }}>\r\n                <h3 className=\"lw-light-blue\" style={{ float: \"left\", display: \"inline\" }}>\r\n                    <BsPencil />\r\n                    {' '}{this.props.name}\r\n                </h3>\r\n                <p className=\"company-detail-end\">\r\n                    company\r\n                    </p>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Panel } from 'react-bootstrap';\r\nimport moment from 'moment';\r\n\r\n\r\nconst settingsPanel = {\r\n    email: \"Email: \",\r\n    leaveYearStartDate: 'Leave year starts on (dd/MM): ',\r\n    workPattern: 'Work pattern: ',\r\n    maxStaffOnLeave: 'Max staff leave for the whole company: ',\r\n    overtimeEnabled: 'Overtime enabled: '\r\n}\r\n\r\nexport default class OrganisationDetail extends React.Component {\r\n\r\n    renderDetailField = (key) => {\r\n        if (key === 'leaveYearStartDate') {\r\n            return <><strong>{settingsPanel[key]}</strong> {moment(this.props.leaveYearStartDate).format('DD/MMM')}  </>\r\n        }\r\n        else\r\n            return <>\r\n                <strong>{settingsPanel[key]}</strong>\r\n                {key === 'workPattern' ?\r\n                    this.props[key]?.name :\r\n                    this.props[key]?.toString()}\r\n            </>\r\n\r\n    }\r\n\r\n    render() {\r\n        const keys = Object.keys(settingsPanel);\r\n        return (\r\n            <Panel>\r\n                <Panel.Body style={{ padding: \"8px\" }}>\r\n\r\n                    {this.props.hide ?\r\n                        null\r\n                        : keys.map((k, i) =>\r\n                            <p key={i}>\r\n                                {this.renderDetailField(k)}\r\n                            </p>\r\n                        )}\r\n                    <p\r\n                        style={{float:\"right\"}}\r\n                        className=\"lw-light-blue company-detail-btn-text\"\r\n                        onClick={() => this.props.handleChange(\"hide\", !this.props.hide)}\r\n                    >\r\n                        {this.props.hide ? \"show more\" : \"show less\"}\r\n                    </p>\r\n                </Panel.Body>\r\n            </Panel>\r\n        )\r\n    }\r\n}","import OrganisationDetail from './OrganisationDetail'\r\n\r\nexport default OrganisationDetail;","import Organisation from './Organisation'\r\n\r\nexport default Organisation;","import React from 'react';\r\nimport { Row } from 'react-bootstrap';\r\nimport OrganisationTitle from './OrganisationTitle'\r\nimport OrganisationDetail from './OrganisationDetail'\r\n\r\n\r\nexport default class Organisation extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hide: false,\r\n        };\r\n    }\r\n\r\n    handleChange = (name, value) => this.setState({ [name]: value });\r\n\r\n    render() {\r\n        const props = this.props\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <OrganisationTitle {...props} />\r\n                </Row>\r\n                <hr style={{ margin: 0, marginBottom: \"1rem\", border: \"1px solid #00ABD4\", background: \"#00ABD4\" }}></hr>\r\n                <Row>\r\n                    <OrganisationDetail {...props} hide={this.state.hide} handleChange={this.handleChange} />\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}","import OrganisationEmployees from './OrganisationEmployees'\r\n\r\nexport default OrganisationEmployees;","import React from 'react';\r\nimport { Col, Grid, Row } from 'react-bootstrap';\r\nimport LocationDetail from '../LocationDetail'\r\nimport OrganisationTree from '../OrganisationTree';\r\nimport OrganisationTable from '../OrganisationTable';\r\nimport Organisation from '../Organisation';\r\nimport appConfig from '../../../config/';\r\nimport { sort, filter } from '../constants';\r\nimport '../OrganisationEmployees.css';\r\n\r\nclass OrganisationEmployees extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: { companyId: 0, name: \"\", locations: [], workgroups: [], employees: [] },\r\n            filterBy: filter.DEFAULT,\r\n            filterValueId: \"\",\r\n            sortBy: sort.DEFAULT,\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getData();\r\n    }\r\n\r\n    getData = async () => {\r\n        const onSuccess = (data) => this.setState({ data: data });\r\n        fetch(appConfig.settings.REACT_APP_API_URL, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n\r\n        })\r\n            .then((response) => response.json())\r\n            .then((data) => onSuccess(data));\r\n    }\r\n\r\n    handleChange = (name, value) => this.setState({ [name]: value });\r\n\r\n    handleFilterChange = (filterBy, filterValueId) =>\r\n        this.setState({\r\n            filterBy: filterBy,\r\n            filterValueId: filterValueId\r\n        });\r\n\r\n    handleSortByChange = (sortBy) => this.setState({ sortBy: sortBy, });\r\n\r\n    resetfilterValueIds = () => this.setState({\r\n        filterBy: filter.DEFAULT,\r\n        filterValueId: \"\",\r\n        sortBy: sort.DEFAULT,\r\n    })\r\n\r\n    render() {\r\n        const { data, filterBy, filterValueId, sortBy } = this.state;\r\n        return (\r\n            <Grid>\r\n                <Row>\r\n                    <Col lg={3} sm={4} md={12}>\r\n                        <Col lg={12} sm={12} md={6}>\r\n                            <OrganisationTree\r\n                                name={data.name}\r\n                                companyId={data.id}\r\n                                locations={data.locations}\r\n                                workgroups={data.workgroups}\r\n                                handleChange={this.handleChange}\r\n                                handleFilterChange={this.handleFilterChange}\r\n                                resetfilterValueIds={this.resetfilterValueIds}\r\n                            />\r\n                        </Col>\r\n\r\n                        <Col lg={12} sm={12} md={6}>\r\n                            <LocationDetail {...this.state} />\r\n                        </Col>\r\n\r\n                    </Col>\r\n                    <Col lg={9} sm={12} md={13}>\r\n                        <Organisation {...this.state.data} />\r\n                        <Row>\r\n                            <OrganisationTable\r\n                                filterBy={filterBy}\r\n                                filterValueId={filterValueId}\r\n                                sortBy={sortBy}\r\n                                {...this.state.data}\r\n                                handleSortByChange={this.handleSortByChange}\r\n                            />\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OrganisationEmployees;","import './App.css';\nimport OrganisationEmployees from './components/OrganisationEmployees';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">     \n      <OrganisationEmployees />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = require('./' + (process.env.REACT_APP_ENV || 'local'));"],"sourceRoot":""}